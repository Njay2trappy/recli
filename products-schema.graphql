directive @example on FIELD_DEFINITION

directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

type Query {
  getPaymentDetailsLink(id: ID!): PaymentLink
  getLinkedPayments(apiKey: String!): [StartedPayment!]!
  generateOTP(email: String!): OTPResponse!
  _service: _Service!
}

type Mutation {
  generatePaymentLink(apiKey: String!, amount: Float!): PaymentLinkResponse
  startPaymentLink(id: ID!, blockchain: String!): PaymentDetails
  changeUserPassword(token: String, otp: String, oldPassword: String, newPassword: String!): String!
  changeAdminPassword(adminToken: String, otp: String, oldPassword: String, newPassword: String!): String!
  changeUserEmail(token: String, otp: String, newEmail: String!): String!
}

type PaymentLinkResponse {
  paymentLink: String!
  recipientAddresses: [RecipientAddress!]!
  amount: Float!
  status: String!
  createdAt: String!
  expiresAt: String!
}

type PaymentDetails {
  id: ID!
  walletAddress: String!
  privateKey: String!
  recipientAddress: String!
  amount: Float!
  convertedAmount: Float!
  status: String!
  blockchain: String!
  createdAt: String!
  expiresAt: String!
  startedAt: String!
  message: String!
}

type PaymentLink {
  id: ID!
  email: String!
  recipientAddresses: [RecipientAddress!]!
  amount: Float!
  status: String!
  createdAt: String!
  expiresAt: String!
  completedAt: String
}

type StartedPayment {
  id: ID!
  walletAddress: String!
  recipientAddress: String!
  amount: Float!
  convertedAmount: Float!
  status: String!
  blockchain: String!
  startedAt: String!
}

type RecipientAddress {
  blockchain: String!
  address: String!
}

type OTPResponse {
  otp: String!
  expiry: String!
}

scalar _FieldSet

scalar _Any

type _Service {
  sdl: String
}